// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/mangas": {
            "get": {
                "description": "Retrieve all mangas with sorting and pagination options.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mangas"
                ],
                "summary": "Get All Mangas Sorted and Paginated",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.MangaDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new manga in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mangas"
                ],
                "summary": "Create Manga",
                "parameters": [
                    {
                        "description": "Manga Insert DTO",
                        "name": "mangaInsertDTO",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.MangaInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Manga Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/mangas/author/{author}": {
            "get": {
                "description": "Retrieve all mangas written by a specific author.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mangas"
                ],
                "summary": "Get Mangas by Author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author Name",
                        "name": "author",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.MangaDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Author Name",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "No mangas found for this author",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/mangas/demography/{demography}": {
            "get": {
                "description": "Retrieve all mangas under a specific demography.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mangas"
                ],
                "summary": "Get Mangas by Demography",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Demography Type",
                        "name": "demography",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.MangaDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Demography",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "No mangas found for this demography",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/mangas/genre/{genre}": {
            "get": {
                "description": "Retrieve all mangas under a specific genre.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mangas"
                ],
                "summary": "Get Mangas by Genre",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre",
                        "name": "genre",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.MangaDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Genre",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "No mangas found for this genre",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/mangas/name/{name}": {
            "get": {
                "description": "Retrieve all mangas that match a specific name pattern.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mangas"
                ],
                "summary": "Get Mangas by Name Pattern",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Manga Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.MangaDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Name",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "No mangas found for this name",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/mangas/{mangaId}": {
            "get": {
                "description": "Retrieve a manga by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mangas"
                ],
                "summary": "Get Manga by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Manga ID",
                        "name": "mangaId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/dtos.MangaDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid Manga ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Manga not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing manga by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mangas"
                ],
                "summary": "Update Manga",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Manga ID",
                        "name": "mangaId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Manga Insert DTO",
                        "name": "mangaInsertDTO",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.MangaInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manga Updated",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Manga ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Manga not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a manga by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mangas"
                ],
                "summary": "Delete Manga",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Manga ID",
                        "name": "mangaId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manga Deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Manga ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Manga not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/readings": {
            "get": {
                "description": "Retrieve a paginated list of readings for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readings"
                ],
                "summary": "Get my readings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.ReadingDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Start a new reading for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readings"
                ],
                "summary": "Start a reading",
                "parameters": [
                    {
                        "description": "Reading data",
                        "name": "reading",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ReadingInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicated reading",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/readings/status": {
            "get": {
                "description": "Retrieve readings for the authenticated user filtered by status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readings"
                ],
                "summary": "Get my readings by status",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ongoing",
                        "description": "Reading status (ongoing, paused, completed)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.ReadingDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid reading status",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/readings/type": {
            "get": {
                "description": "Retrieve readings for the authenticated user filtered by type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readings"
                ],
                "summary": "Get my readings by type",
                "parameters": [
                    {
                        "type": "string",
                        "default": "book",
                        "description": "Reading type (manga, book, custom_document)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.ReadingDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid reading type",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/readings/{readingId}": {
            "put": {
                "description": "Update an existing reading for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readings"
                ],
                "summary": "Update my reading",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reading ID",
                        "name": "readingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated reading data",
                        "name": "reading",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ReadingInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a reading for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readings"
                ],
                "summary": "Delete my reading",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reading ID",
                        "name": "readingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "post": {
                "description": "Create a new user in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserDTO"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{userId}": {
            "get": {
                "description": "Retrieve a user by their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid User ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing user in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserDTO"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user from the system by their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User Login Information",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Signup",
                "parameters": [
                    {
                        "description": "User Signup Information",
                        "name": "signup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.SignupDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/books": {
            "get": {
                "description": "Get all books sorted and paginated",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get all books with sorting and pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of books per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.BookDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new book entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Create a new book",
                "parameters": [
                    {
                        "description": "Book Information",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.BookInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/books/author/{author}": {
            "get": {
                "description": "Get books written by a specific author",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get books by author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author Name",
                        "name": "author",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of books per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.BookDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/books/genre/{genre}": {
            "get": {
                "description": "Get books of a specific genre",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get books by genre",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre",
                        "name": "genre",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of books per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.BookDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/books/isbn/{isbn}": {
            "get": {
                "description": "Get book details by ISBN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get a book by ISBN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ISBN",
                        "name": "isbn",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.BookDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/books/name/{name}": {
            "get": {
                "description": "Get books matching a specific name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get books by name pattern",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of books per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.BookDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/books/{id}": {
            "get": {
                "description": "Get book details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get a book by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.BookDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a book entry by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Update an existing book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Book Information",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.BookInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a book entry by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Delete a book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/documents": {
            "get": {
                "description": "Retrieve all custom documents for the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Get all custom documents for the authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.CustomDocumentDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a custom document for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Create a new custom document",
                "parameters": [
                    {
                        "description": "Custom Document Data",
                        "name": "document",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CustomDocumentInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/documents/{id}": {
            "get": {
                "description": "Retrieve a custom document by its ID for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Get a document by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.CustomDocumentDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a custom document by ID for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Update an existing custom document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Custom Document Data",
                        "name": "document",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CustomDocumentInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a custom document by ID for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Delete a custom document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/my-reading-lists": {
            "get": {
                "description": "Retrieve a reading list associated with the authenticated user by list ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingList"
                ],
                "summary": "Get a specific reading list by ID for the authenticated user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reading List ID",
                        "name": "listId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid list ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading List not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new reading list associated with the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingList"
                ],
                "summary": "Create a new reading list for the authenticated user",
                "parameters": [
                    {
                        "description": "Reading List details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ReadingListInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful creation",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove readings from the authenticated user's specified reading list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingList"
                ],
                "summary": "Remove readings from a user's reading list",
                "parameters": [
                    {
                        "description": "Readings to be removed",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateReadingsToListDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful removal",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading List not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/my-reading-lists/{readingId}": {
            "put": {
                "description": "Update the details of a specific reading list associated with the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingList"
                ],
                "summary": "Update an existing reading list for the authenticated user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reading List ID",
                        "name": "readingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Reading List details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ReadingListInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful update",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading List not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific reading list associated with the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingList"
                ],
                "summary": "Delete a reading list for the authenticated user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reading List ID",
                        "name": "readingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading List not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/path-to-resource": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/reading-lists": {
            "get": {
                "description": "Retrieve all reading lists associated with a specific user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingList"
                ],
                "summary": "Get reading lists by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new reading list for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingList"
                ],
                "summary": "Create a new reading list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Reading List details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ReadingListInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful creation",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID or request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/reading-lists/{readingId}": {
            "put": {
                "description": "Update the details of a specific reading list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingList"
                ],
                "summary": "Update an existing reading list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reading List ID",
                        "name": "readingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Reading List details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ReadingListInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful update",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID, reading list ID, or request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading List not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific reading list associated with a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingList"
                ],
                "summary": "Delete a reading list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reading List ID",
                        "name": "readingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID or reading list ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading List not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/reading-lists/{userId}": {
            "post": {
                "description": "Add readings to the specified user's reading list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingList"
                ],
                "summary": "Add readings to a user's reading list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Readings to be added",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateReadingsToListDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful addition",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID or request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading List not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove readings from the specified user's reading list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingList"
                ],
                "summary": "Remove readings from a user's reading list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Readings to be removed",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateReadingsToListDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful removal",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID or request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading List not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/readings": {
            "post": {
                "description": "Create a new reading",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readings"
                ],
                "summary": "Create Reading",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Reading data",
                        "name": "reading",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ReadingInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reading created",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/readings/{id}": {
            "get": {
                "description": "Get a reading by its ID",
                "tags": [
                    "Readings"
                ],
                "summary": "Get Reading by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reading ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/dtos.ReadingDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a reading by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readings"
                ],
                "summary": "Update Reading",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reading ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Reading data",
                        "name": "reading",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ReadingInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reading updated",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a reading by its ID",
                "tags": [
                    "Readings"
                ],
                "summary": "Delete Reading",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reading ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Reading deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/records": {
            "post": {
                "description": "Create a new record associated with a specific reading",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingRecord"
                ],
                "summary": "Add a new record for a reading",
                "parameters": [
                    {
                        "description": "Reading Record details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ReadingRecordInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reading Record created",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/records/{readingId}": {
            "get": {
                "description": "Retrieve all records from a user's reading by reading ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingRecord"
                ],
                "summary": "Get records for a specific reading",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reading ID",
                        "name": "readingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found reading records",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "No records found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of a specific record for a reading",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingRecord"
                ],
                "summary": "Update an existing record for a reading",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reading ID",
                        "name": "readingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Reading Record details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ReadingRecordInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reading Record updated",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        },
        "/records/{recordId}": {
            "put": {
                "description": "Update the details of a reading record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingRecord"
                ],
                "summary": "Update an existing reading record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Record ID",
                        "name": "recordId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Reading Record details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ReadingRecordInsertDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reading Record updated",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific reading record from a user's readings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReadingRecord"
                ],
                "summary": "Remove a record from my readings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reading ID",
                        "name": "readingId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Record ID",
                        "name": "recordId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reading Record deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reading not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.BookDTO": {
            "type": "object",
            "properties": {
                "ISBN": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "edition": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pages": {
                    "type": "integer"
                },
                "publication_date": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                }
            }
        },
        "dtos.BookInsertDTO": {
            "type": "object",
            "required": [
                "author",
                "language",
                "name",
                "pages"
            ],
            "properties": {
                "ISBN": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "edition": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pages": {
                    "type": "integer"
                },
                "publication_date": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                }
            }
        },
        "dtos.CustomDocumentDTO": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fileURL": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dtos.CustomDocumentInsertDTO": {
            "type": "object",
            "required": [
                "author",
                "title"
            ],
            "properties": {
                "author": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 200
                },
                "fileURL": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "draft",
                        "published",
                        "archived"
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dtos.LoginDTO": {
            "type": "object",
            "required": [
                "login_identifier",
                "password"
            ],
            "properties": {
                "login_identifier": {
                    "description": "username or email",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dtos.MangaDTO": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chapters": {
                    "type": "integer"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "demograhpy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publication_date": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "volume": {
                    "type": "integer"
                }
            }
        },
        "dtos.MangaInsertDTO": {
            "type": "object",
            "required": [
                "author",
                "chapters",
                "demograhpy",
                "genres",
                "title",
                "volume"
            ],
            "properties": {
                "author": {
                    "type": "string"
                },
                "chapters": {
                    "type": "integer"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "demograhpy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publication_date": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "volume": {
                    "type": "integer"
                }
            }
        },
        "dtos.ProfileDTO": {
            "type": "object",
            "properties": {
                "biography": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "profileCoverURL": {
                    "type": "string"
                },
                "profileImageURL": {
                    "type": "string"
                }
            }
        },
        "dtos.ProfileInsertDTO": {
            "type": "object",
            "required": [
                "first_name",
                "last_name"
            ],
            "properties": {
                "biography": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "minLength": 3
                },
                "last_name": {
                    "type": "string",
                    "minLength": 3
                },
                "profile_cover_url": {
                    "type": "string"
                },
                "profile_image_url": {
                    "type": "string"
                }
            }
        },
        "dtos.ReadingDTO": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_update": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "reading_name": {
                    "type": "string"
                },
                "reading_status": {
                    "type": "string"
                },
                "reading_type": {
                    "type": "string"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ReadingRecordDTO"
                    }
                }
            }
        },
        "dtos.ReadingInsertDTO": {
            "type": "object",
            "required": [
                "document_id",
                "reading_status",
                "reading_type"
            ],
            "properties": {
                "document_id": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "reading_status": {
                    "type": "string",
                    "enum": [
                        "ongoing",
                        "completed",
                        "paused"
                    ]
                },
                "reading_type": {
                    "type": "string",
                    "enum": [
                        "manga",
                        "book",
                        "custom_document"
                    ]
                }
            }
        },
        "dtos.ReadingListInsertDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.ReadingRecordDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "progress": {
                    "type": "string"
                },
                "recordDate": {
                    "type": "string"
                }
            }
        },
        "dtos.ReadingRecordInsertDTO": {
            "type": "object",
            "required": [
                "notes",
                "progress",
                "reading_id"
            ],
            "properties": {
                "notes": {
                    "type": "string"
                },
                "progress": {
                    "type": "string"
                },
                "reading_id": {
                    "type": "string"
                }
            }
        },
        "dtos.SignupDTO": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "profile_insert_dto": {
                    "$ref": "#/definitions/dtos.ProfileInsertDTO"
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        },
        "dtos.UpdateReadingsToListDTO": {
            "type": "object",
            "required": [
                "reading_ids",
                "reading_list_id"
            ],
            "properties": {
                "reading_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reading_list_id": {
                    "type": "string"
                }
            }
        },
        "dtos.UserDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "profile": {
                    "$ref": "#/definitions/dtos.ProfileDTO"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dtos.UserInsertDTO": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        },
        "utils.ApiResponse": {
            "description": "Represents a standardized API response structure.",
            "type": "object",
            "properties": {
                "code": {
                    "description": "The HTTP status code",
                    "type": "integer"
                },
                "data": {
                    "description": "The data returned by the API"
                },
                "msg": {
                    "description": "A message providing additional context",
                    "type": "string"
                },
                "success": {
                    "description": "Indicates if the request was successful",
                    "type": "boolean"
                },
                "timestamp": {
                    "description": "The time at which the response was generated",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
